{
  "name": "my nano Banan",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"google/gemini-2.5-flash-image-preview:free\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"create an image of {{ $json.message.text }}\"\n        }\n      ]\n    }\n  ]\n  \n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        528,
        0
      ],
      "id": "5c6ea367-7099-4c6c-abf1-810a5b882aa1",
      "name": "Nano Banana",
      "credentials": {
        "openRouterApi": {
          "id": "WAzDr9st2V2QDEN5",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        272,
        0
      ],
      "id": "5de94fd1-7d9f-4af2-ae65-34c08d27b831",
      "name": "Telegram Input Message",
      "webhookId": "f15a6b0d-851e-4ea3-b649-75debaea33d5",
      "credentials": {
        "telegramApi": {
          "id": "AYb3ZjNvtZQBea4k",
          "name": "TestDemo"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "\n// Get the input data\nconst inputData = $input.all();\n\n// Extract and process each item\nconst outputData = [];\n\nfor (const item of inputData) {\n  const imageUrl = item.json.choices[0].message.images[0].image_url.url;\n  \n  // Remove the data URI prefix to get just the base64 data\n  const base64Data = imageUrl.split(',')[1];\n  \n  // Convert base64 to binary buffer\n  const binaryData = Buffer.from(base64Data, 'base64');\n  \n  outputData.push({\n    json: {\n      ...item.json, // Keep original data\n    },\n    binary: {\n      data: {\n        data: binaryData.toString('base64'), //  must be a base64 string\n        mimeType: 'image/png',\n        fileName: 'generated_image.png',\n      }\n    }\n  });\n}\n\nreturn outputData;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        0
      ],
      "id": "7879f0e3-e0f7-4ea3-b27c-fc1113b519d2",
      "name": "Extract Image"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Telegram Input Message').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        928,
        0
      ],
      "id": "84a0b196-06b7-42c7-bd4e-104c5db2142d",
      "name": "Send a photo message",
      "webhookId": "87201b51-a722-44b0-82e4-dbabfeb37687",
      "credentials": {
        "telegramApi": {
          "id": "AYb3ZjNvtZQBea4k",
          "name": "TestDemo"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Nano Banana": {
      "main": [
        [
          {
            "node": "Extract Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Input Message": {
      "main": [
        [
          {
            "node": "Nano Banana",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Image": {
      "main": [
        [
          {
            "node": "Send a photo message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d3ebb05e-cb4f-4a20-ad43-52844f05a804",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1b3ff80e9bcccf95fecf0202dcd4c0ec145cf02427f16e914c2f0d2e2500d6ba"
  },
  "id": "JWiU3Zt4b6ewv11W",
  "tags": []
}